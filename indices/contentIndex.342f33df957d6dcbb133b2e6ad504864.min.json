{"/":{"title":"🪴 Biubi's Drawer.","content":"\n- 💄 [Styled-Component](notes/styled-component.md)\n","lastmodified":"2022-12-04T11:59:15.247977816Z","tags":null},"/notes/styled-component":{"title":"","content":"[styled-components doc](https://styled-components.com/docs)\n\n#### Basics\n\n- styled-component = styled React component\n  \u003e It removes the mapping between components and styles. This means that when you're defining your styles, you're actually creating a normal React component, that has your styles attached to it.\n- styled.div VS style.section\n\n  ```html\n  // styled.div\n  \u003cdiv class=\"xxx\" /\u003e\n\n  // styled.section\n  \u003csection class=\"xxx\" /\u003e\n  ```\n\n- [\"as\" polymorphic prop](https://styled-components.com/docs/api#as-polymorphic-prop)\n  实际渲染为 as={Component} 内容，但复用 WrapperComponent 样式\n\n  ```js\n  const Button = styled.button`\n    display: inline-block;\n    color: palevioletred;\n    font-size: 1em;\n    margin: 1em;\n    padding: 0.25em 1em;\n    border: 2px solid palevioletred;\n    border-radius: 3px;\n    display: block;\n  `\n\n  const ReversedButton = (props) =\u003e (\n    \u003cButton {...props} children={props.children.split(\"\").reverse()} /\u003e\n  )\n\n  render(\n    \u003cdiv\u003e\n      \u003cButton\u003eNormal Button\u003c/Button\u003e\n      \u003cButton as={ReversedButton}\u003eCustom Button with Normal Button styles\u003c/Button\u003e\n    \u003c/div\u003e,\n  )\n  ```\n\n- 在 render 函数外定义 styled-component，否则在每次 render 时都会重新创建\n  \u003e It is important to define your styled components outside of the render method, otherwise it will be recreated on every single render pass. Defining a styled component within the render method will thwart caching and drastically slow down rendering speed, and should be avoided.\n- 使用 `stylis` 预处理器，支持类 scss 语法\n- [Attaching additional props](https://styled-components.com/docs/basics#attaching-additional-props)\n  - attrs 中可使用函数返回结果 + 动态 props\n\n    ```js\n    const Input = styled.input.attrs((props) =\u003e ({\n      // we can define static props\n      type: \"text\",\n\n      // or we can define dynamic ones\n      size: props.size || \"1em\",\n    }))`\n      color: palevioletred;\n      font-size: 1em;\n      border: 2px solid palevioletred;\n      border-radius: 3px;\n\n      /* here we use the dynamically computed prop */\n      margin: ${(props) =\u003e props.size};\n      padding: ${(props) =\u003e props.size};\n    `\n\n    render(\n      \u003cdiv\u003e\n        \u003cInput placeholder=\"A small text input\" /\u003e\n        \u003cbr /\u003e\n        \u003cInput placeholder=\"A bigger text input\" size=\"2em\" /\u003e\n      \u003c/div\u003e,\n    )\n    ```\n\n  - attrs 可被 override，越精准优先级越高\n\n#### Advanced\n\n- Theming\n  - 可使用 Props 传参或函数，实现主题色变化或 revert\n  - 外层组件可使用 `withTheme` `useContext` `useTheme` 等方式获取 theme 信息\n- Refs\n  - 给 styled-component 传入 ref 参数可获得当前 Dom 节点或对应 React component 实例\n- Together with existing CSS\n  styled-components 生成实际的样式表并且通过 `className` 属性附加到 DOM 节点中\n  - 使用 `styled(MyComponent)` 并使用 `this.props.className` 将样式表传入 DOM 节点\n    ```js\n    class MyComponent extends React.Component {\n      render() {\n        // Attach the passed-in className to the DOM node\n        return \u003cdiv className={`some-global-class ${this.props.className}`} /\u003e\n      }\n    }\n    ```\n  - 当 styled-components 定义的样式属性与全局冲突时，由于 styled componens class 会被插入至 DOM 节点末端所以会占有较高的优先级\n  - 避免与第三方样式冲突：外层设置命名空间\n- Tagged Template Literals\n  - Tagged Template Literals in ES6\n\n    ```js\n    // These are equivalent:\n    fn`some string here`\n    fn([\"some string here\"])\n\n    // These are equivalent:\n    const aVar = \"good\"\n    fn`this is a ${aVar} day`\n    fn([\"this is a \", \" day\"], aVar)\n    ```\n\n  - 可以使用 \u0026\u0026 因为 styled-components 会忽略返回为 undefined, null, false, or \"\"\n    ```js\n    const Title = styled.h1`\n      /* Text centering won't break if props.upsidedown is falsy */\n      ${(props) =\u003e props.upsidedown \u0026\u0026 \"transform: rotate(180deg);\"}\n      text-align: center;\n    `\n    ```\n- [Referring to other components](https://styled-components.com/docs/advanced#referring-to-other-components)\n","lastmodified":"2022-12-04T11:59:15.247977816Z","tags":null}}